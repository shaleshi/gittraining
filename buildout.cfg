[buildout]
extends =

download-cache        =  ${buildout:directory}/downloads
newest                =  false
allow-picked-versions =  true
include-site-packages =  false
exec-sitecustomize    =  false
log-level             =  INFO
unzip 		      =  true
parts = pyflakes
#        pylint
        zope2
#        instance
#        zopepy
#	Chameleon        
	clonedigger
        nosetests
	pep8
	autopep8
	boto
#        django 
#        djangoprod
        pytest
#	test
#	pyzmq
	Chameleon
#        five.pt
#        zope.pagetemplate  
#	coverage-test
#	coverage-report
#	jre_download
#        jre_install
#        selenium_server_download
#        selenium_py

#server = http://fileserver.example.org
[zope.pagetemplate]
recipe = zc.recipe.egg
zope.pagetemplate = svn http://svn.zope.org/repos/main/zope.pagetemplate/trunk
[Chameleon]
recipe = zc.recipe.egg
Chameleon = git git://github.com/malthe/chameleon.git

[five.pt]
recipe = zc.recipe.egg
five.pt                     = svn http://svn.zope.org/repos/main/five.pt/trunk

versions = versions        
[versions]
pylint = 0.25.1
pyflakes = 0.5.0
#clonedigger = 1.0.11
nosetests = 1.1.2
pep8 = 1.2
autopep8 = 0.6.4 
pytest = 2.2.4
boto = 2.4.1
zope.pagetemplate = 3.6.3
django = 1.4
grokcore.chameleon = 1.0.2
Chameleon = 2.9.2
#pyzmq = 2.1.11
paramiko = 1.9.0

[pyflakes]
tool = pyflakes
unzip = true
recipe = zc.recipe.egg
eggs = pyflakes
       setuptools
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'

[pylint]
recipe = zc.recipe.egg
eggs = pylint
       ${zope2:eggs}
       lockfile
entry-points = pylint=pylint.lint:Run
arguments = sys.argv[1:]

eggs =  Zope2
	setuptools
	boto
       	zope.pagetemplate
	Chameleon
	paramiko
interpreter = zopepy 

[zopepy]
recipe = zc.recipe.egg
eggs = ${pyflakes:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[clonedigger]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    echo "Start CloneDigger code analysis:"
    clonedigger --cpd-output -o ${buildout:directory}/clonedigger.xml ${buildout:directory}/src
    echo "Write log to ${buildout:directory}/clonedigger.xml"
    echo "Finished."
    echo ""
output = ${buildout:directory}/bin/jenkins-code-analysis-clonedigger
mode = 755

[nosetests]
recipe = pbp.recipe.noserunner
eggs = pbp.recipe.noserunner
working-directory = ${buildout:directory}

[pep8]
recipe = zc.recipe.egg
eggs = pep8
entry-points = pep8=pep8:_main
args = ['--exclude=.hg,buildout,*.pt.py', '--ignore="NOTHING"', '../designhub']
scripts = pep8
initialization = sys.argv.extend(${pep8:args})

[autopep8]
recipe = zc.recipe.egg
eggs = autopep8

[boto]
recipe = zc.recipe.egg
eggs = boto

[django]
recipe = zc.recipe.egg
eggs = django
interpreter = django 

#recipe = djangorecipe
#version = 1.2
#settings = development
#project = project 

[djangoprod]
recipe = djangorecipe
version = ${django:version}
settings = production
wsgi = true
project = ${django:project}

[pytest]
recipe = zc.recipe.egg
eggs = pytest

[test]
recipe = zc.recipe.testrunner
eggs = zope.pagetemplate [test]

[pyzmq]
recipe = zc.recipe.egg
url = file:///home/local/PALYAM/hsadashiv/Downloads/pyzmq-2.1.11-py2.6-win32.egg

[jre_download]
recipe = hexagonit.recipe.download
url = ${buildout:file-server}/jre-6u26-linux-i586.bin
download-only = true
ignore-existing = true

[jre_install]
recipe = iw.recipe.cmd
on_install = true
on_update = true
shell = bash
cmds =
    chmod +x ${jre_download:location}/jre-6u26-linux-i586.bin
    cd ${buildout:directory};if [[ -e "jre1.6.0_26" ]]; then echo -n; else ${jre_download:location}/jre-6u26-linux-i586.bin; fi

[selenium_server_download]
recipe = hexagonit.recipe.download
url = ${buildout:file-server}/selenium-server-standalone-2.1.0.jar
download-only = true
ignore-existing = true

[selenium_py]
recipe = z3c.recipe.scripts
interpreter = python
eggs = selenium

[coverage-test]
recipe = zc.recipe.testrunner
eggs = zope.pagetemplate [test]
defaults = ['--coverage', '../../coverage']

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'coverage/report')
zcml   =   
	grokcore.chameleon
	<include package="five.pt" />

[zope2]
recipe = z3c.recipe.scripts
interpreter = zopepy
eggs =
	boto
	blend
	cement
	Coffin
#	cElementTree
	HTMLTemplate
	htmlfilter
	Flask
# Python
        boto
#        jenkinsapi
